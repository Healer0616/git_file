Git命令总结

Git设置用户名和邮箱：
	git config --global user.name "Your Name"
	git config --global user.email "email@example.com"

创建文件夹：
	mkdir 文件名

初始化本地仓库：
	git init

把文件添加到仓库：
把工作区的修改，提交到暂存区
	git add xxx.txt

把文件提交到仓库：
把暂存区的修改，保存至本地库
	git commit -m "有意义的描述提交"

查看仓库当前的状态：
	git status

查看修改内容：
	git diff

查看git提交日志：
	git log
简化git日志的输出：
	git log --pretty=oneline

git版本回退：
	git reset --hard HEAD^  # ^表示回退一个版本，多个可使用HEAD^^^,HEAD~100
用commit id使版本在回到最新：
	git reset --hard 1094a  # 该1094a的commit id为当前页面没有关闭翻记录找到的

记录git每次commit id，用于命令窗口关闭后再找回：
	git reflog

git撤销操作：
把文件在工作区的修改全部撤销
	git checkout -- 文件名
把暂存区的文件撤销修改：
	1.git reset HEAD 文件名
	2.git checkout -- 文件名

从版本库中删除该文件：
	git rm
	git commit -m "remove 文件名"

删错了，因为版本库里还有，所以可以把误删的文件恢复到最新版本：
	git checkout -- 文件名

在本地仓库下运行命令：
	git remote add origin git@github.com:Healer0616/仓库名.git

把本地库的记录，推送至远程库：
	第一次推送master分支的所有内容
	git push -u origin master
	之后的简化推送命令
	git push origin master

git克隆命令：
	git clone

创建并切换分支：
	git checkout -b 分支名
	git switch -c 分支名     # 更科学，防止于checkout的撤销操作搞混
	相当于两条命令
	git branch dev   # 创建dev分支
	git checkout dev # 切换到dev分支上

	git switch dev   # 更科学的切换方式，防止于checkout的撤销操作搞混

查看当前分支：
	git branch

删除dev分支：
	git branch -d dev

给分支重命名：
	git branch -m oldName newName   # 旧名字 新名字

合并某分支到当前分支：
	例如：当前在master主分支上
	git merge 分支名

将远程主机origin的master分支拉取过来，与本地的brantest分支合并
	git pull <远程主机名> <远程分支名>:<本地分支名>
	git pull origin master:dev








